<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
	<!-- example
	<port-mappings>
		<port-mapping http="8080" https="9443"/>
	</port-mappings>  -->

		<!--  example -->
		<intercept-url pattern="/swagger-ui.html" access="hasRole('ROLE_ADMIN')" /> 
	</http>

	<!--  example -->
	<authentication-manager>
	  <authentication-provider>
	    <user-service>
	    	<user name="USER" password="USER" authorities="ROLE_USER" />
	    	<user name="ADMIN" password="ADMIN" authorities="ROLE_ADMIN" />
	    </user-service> 
	  </authentication-provider>
	</authentication-manager>
	
	<!-- jdbc connect auth example
	<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder" />
	
	<authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt" />
            <jdbc-user-service data-source-ref="dataSource"
                authorities-by-username-query="the query here is working ok"
                users-by-username-query="select username, password, enabled from vendor where username = ? " />
        </authentication-provider>
        <authentication-provider>
            <password-encoder hash="bcrypt" />
            <jdbc-user-service data-source-ref="dataSource"
                authorities-by-username-query="the query here is working alright."
                users-by-username-query="select email, password, enabled from customer where email = ? " />
        </authentication-provider>
	</authentication-manager> -->
</beans:beans>